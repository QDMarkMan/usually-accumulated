/** ---------------------------------------------------------------------------------------------
 *  @Author [Tongfu.E].
 *  @Date [2023-04-14 11:38:23].
 *  @Des [指针相关练习].
 *-------------------------------------------------------------------------------------------- */
#include <iostream>

int main(int argc, char const *argv[])
{
  // 给了这个指针一个内存为了0的内存地址 这个指针是无效的 0不是一个有效的内存地址, 一般采用nullptr替代

  // void*是一个通用指针类型，即使是换成了int*，double*，char*，都是可以的，但是这样就并不
  // 严谨了，因为这样就会造成类型转换的问题，所以一般采用void*来表示一个通用指针类型
  void* ptr = 0;

  int var = 9;
  // 通过&取地址符号 可以得到一个变量的内存地址， ptr1实际上就是存储了指针的变量， 
  int* ptr1 = &var;
  // 这一步是通过解引用操作符*来获取或者修改指针所指向的内存地址的值
  *ptr1 = 10; 
  // 修改之后var的值也就变成10
  std::cout << var << std::endl; // 输出10
  
  

  return 0;
}
